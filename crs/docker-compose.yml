version: '3.4'

services:
  catalog.app:
    container_name: catalog.app
    image: ${DOCKER_REGISTRY-}catalogapp
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.App/Dockerfile
    depends_on:
    - mssql
    - redis

  identity.app:
    container_name: identity.app
    image: ${DOCKER_REGISTRY-}identityapp
    build:
      context: ..
      dockerfile: crs/Services/Identity/Identity.App/Dockerfile
    depends_on:
    - postgres 

  monitoring.app:
    container_name: monitoring.app
    image: ${DOCKER_REGISTRY-}monitoringapp
    build:
      context: ..
      dockerfile: crs/Services/Monitoring/Monitoring.App/Dockerfile
    depends_on:
    - catalog.app
    - identity.app

  # gateways.web:
  #   image: ${DOCKER_REGISTRY-}gatewaysweb
  #   build:
  #     context: ..
  #     dockerfile: crs/Services/Gateways/Gateways.Web/Dockerfile

  mssql:
    container_name: mssql
    image: mcr.microsoft.com/mssql/server:2019-latest

  postgres:
    container_name: postgres
    image: postgres

  redis:
    container_name: redis
    image: redis

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    ports:
    - 9200:9200
    volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
    - xpack.monitoring.enabled=true
    - xpack.watcher.enabled=false
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node
    networks:
    - elastic

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.11.3
    ports:
    - 5601:5601
    depends_on:
    - elasticsearch
    environment:
    - ELASTICSEARCH_URL=http://localhost:9200
    networks:
    - elastic

  # influx:
  #   container_name: influx
  #   image: influxdb

networks:
  elastic:
    driver: bridge



